/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as UsersRouteImport } from './routes/users'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as PostsPostIdRouteImport } from './routes/posts_.$postId'

const PostsLazyRouteImport = createFileRoute('/posts')()
const IndexLazyRouteImport = createFileRoute('/')()

const PostsLazyRoute = PostsLazyRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/posts.lazy').then((d) => d.Route))
const UsersRoute = UsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/users.lazy').then((d) => d.Route))
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const PostsPostIdRoute = PostsPostIdRouteImport.update({
  id: '/posts_/$postId',
  path: '/posts/$postId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/profile': typeof ProfileRoute
  '/users': typeof UsersRoute
  '/posts': typeof PostsLazyRoute
  '/posts/$postId': typeof PostsPostIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/profile': typeof ProfileRoute
  '/users': typeof UsersRoute
  '/posts': typeof PostsLazyRoute
  '/posts/$postId': typeof PostsPostIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/profile': typeof ProfileRoute
  '/users': typeof UsersRoute
  '/posts': typeof PostsLazyRoute
  '/posts_/$postId': typeof PostsPostIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/profile' | '/users' | '/posts' | '/posts/$postId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/profile' | '/users' | '/posts' | '/posts/$postId'
  id: '__root__' | '/' | '/profile' | '/users' | '/posts' | '/posts_/$postId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ProfileRoute: typeof ProfileRoute
  UsersRoute: typeof UsersRoute
  PostsLazyRoute: typeof PostsLazyRoute
  PostsPostIdRoute: typeof PostsPostIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts_/$postId': {
      id: '/posts_/$postId'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ProfileRoute: ProfileRoute,
  UsersRoute: UsersRoute,
  PostsLazyRoute: PostsLazyRoute,
  PostsPostIdRoute: PostsPostIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
